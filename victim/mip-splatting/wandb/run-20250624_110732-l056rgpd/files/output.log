Output folder: /workspace/wwang/poison-splat/log/bicycle_trigger/checkerboard_bw [24/06 11:07:34]
> /workspace/wwang/poison-splat/victim/mip-splatting/train_scarf.py(71)training()
-> scene = PoisonedScene(dataset, gaussians, poison_config) [24/06 11:07:34]
(Pdb) Using poisoned dataset loader [24/06 11:07:36]
Reading camera 194/194 [24/06 11:08:19]
Loading Training Cameras [24/06 11:08:24]
[ INFO ] Encountered quite large input images (>1.6K pixels width), rescaling to 1.6K.
 If this is not desired, please explicitly specify '--resolution/-r' as 1 [24/06 11:08:24]

Program interrupted. (Use 'cont' to resume). [24/06 11:09:07]
--Call-- [24/06 11:09:07]
> /usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py(1697)__setattr__()
-> def __setattr__(self, name: str, value: Union[Tensor, 'Module']) -> None: [24/06 11:09:07]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:08]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:08]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:08]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:08]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:08]
(Pdb) 1692 	            modules = self.__dict__['_modules'] [24/06 11:09:11]
1693 	            if name in modules: [24/06 11:09:11]
1694 	                return modules[name] [24/06 11:09:11]
1695 	        raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'") [24/06 11:09:11]
1696 	 [24/06 11:09:11]
1697 ->	    def __setattr__(self, name: str, value: Union[Tensor, 'Module']) -> None: [24/06 11:09:11]
1698 	        def remove_from(*dicts_or_sets): [24/06 11:09:11]
1699 	            for d in dicts_or_sets: [24/06 11:09:11]
1700 	                if name in d: [24/06 11:09:11]
1701 	                    if isinstance(d, dict): [24/06 11:09:11]
1702 	                        del d[name] [24/06 11:09:11]
(Pdb)
Program interrupted. (Use 'cont' to resume). [24/06 11:09:14]
--Call-- [24/06 11:09:14]
> /usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py(1697)__setattr__()
-> def __setattr__(self, name: str, value: Union[Tensor, 'Module']) -> None: [24/06 11:09:14]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:14]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:14]
(Pdb) --KeyboardInterrupt-- [24/06 11:09:15]
(Pdb)
Traceback (most recent call last):
  File "/workspace/wwang/poison-splat/victim/mip-splatting/train_scarf.py", line 436, in <module>
    training(lp.extract(args), op.extract(args), pp.extract(args), args.test_iterations, args.save_iterations, args.checkpoint_iterations, args.start_checkpoint, args.debug_from, poison_config, wandb_run)
  File "/workspace/wwang/poison-splat/victim/mip-splatting/train_scarf.py", line 71, in training
    scene = PoisonedScene(dataset, gaussians, poison_config)
  File "/workspace/wwang/poison-splat/victim/mip-splatting/scene/poisoned_scene.py", line 121, in __init__
    self.train_cameras[resolution_scale] = cameraList_from_camInfos(scene_info.train_cameras, resolution_scale, args)
  File "/workspace/wwang/poison-splat/victim/mip-splatting/utils/camera_utils.py", line 61, in cameraList_from_camInfos
    camera_list.append(loadCam(args, id, c, resolution_scale))
  File "/workspace/wwang/poison-splat/victim/mip-splatting/utils/camera_utils.py", line 49, in loadCam
    cam = Camera(colmap_id=cam_info.uid, R=cam_info.R, T=cam_info.T,
  File "/workspace/wwang/poison-splat/victim/mip-splatting/scene/cameras.py", line 39, in __init__
    self.original_image = image.clamp(0.0, 1.0).to(self.data_device)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1697, in __setattr__
    def __setattr__(self, name: str, value: Union[Tensor, 'Module']) -> None:
  File "/usr/lib/python3.10/bdb.py", line 92, in trace_dispatch
    return self.dispatch_call(frame, arg)
  File "/usr/lib/python3.10/bdb.py", line 137, in dispatch_call
    if self.quitting: raise BdbQuit
bdb.BdbQuit
